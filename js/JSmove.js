var m3D = function () { var e = 4; var t = [], n, r, i, s, o, u = "images/", a = { x: 0, y: 0, z: -650, s: 0, fov: 500 }, f = 0, l = 0; a.setTarget = function (e, t, n) { if (Math.abs(t - e) > .1) { a.s = 1; a.p = 0; a.d = t - e; if (n) { a.d *= 2; a.p = 9 } } }; a.tween = function (e) { if (a.s != 0) { a.p += a.s; a[e] += a.d * a.p * .01; if (a.p == 10) a.s = -1; else if (a.p == 0) a.s = 0 } return a.s }; var c = function (t, f, l, c, h) { if (f) { this.url = f.url; this.title = f.title; this.color = f.color; this.isLoaded = false; if (document.createElement("canvas").getContext) { this.srcImg = new Image; this.srcImg.src = u + f.src; this.img = document.createElement("canvas"); this.canvas = true; r.appendChild(this.img) } else { this.img = document.createElement("img"); this.img.src = u + f.src; r.appendChild(this.img) } this.img.onclick = function () { if (a.s) return; if (this.diapo.isLoaded) { if (this.diapo.urlActive) { top.location.href = this.diapo.url } else { a.tz = this.diapo.z - a.fov; a.tx = this.diapo.x; a.ty = this.diapo.y; if (s) { s.but.className = "button viewed"; s.img.className = ""; s.img.style.cursor = "pointer"; s.urlActive = false; o.style.visibility = "hidden" } this.diapo.but.className = "button selected"; p(false); s = this.diapo } } }; this.but = document.createElement("div"); this.but.className = "button"; i.appendChild(this.but); this.but.diapo = this; this.but.style.left = Math.round(this.but.offsetWidth * 1.2 * (t % e)) + "px"; this.but.style.top = Math.round(this.but.offsetHeight * 1.2 * Math.floor(t / e)) + "px"; this.but.onclick = this.img.onclick; n = this.img; this.img.diapo = this; this.zi = 25e3 } else { this.img = document.createElement("div"); this.isLoaded = true; this.img.className = "fog"; r.appendChild(this.img); this.w = 300; this.h = 300; this.zi = 15e3 } this.x = l; this.y = c; this.z = h; this.css = this.img.style }; c.prototype.anim = function () { if (this.isLoaded) { var e = this.x - a.x; var t = this.y - a.y; var n = this.z - a.z; if (n < 20) n += 5e3; var r = a.fov / n; var i = this.w * r; var s = this.h * r; this.css.left = Math.round(f + e * r - i * .5) + "px"; this.css.top = Math.round(l + t * r - s * .5) + "px"; this.css.width = Math.round(i) + "px"; this.css.height = Math.round(s) + "px"; this.css.zIndex = this.zi - Math.round(n) } else { this.isLoaded = this.loading() } }; c.prototype.loading = function () { if (this.canvas && this.srcImg.complete || this.img.complete) { if (this.canvas) { this.w = this.srcImg.width; this.h = this.srcImg.height; this.img.width = this.w; this.img.height = this.h; var e = this.img.getContext("2d"); e.drawImage(this.srcImg, 0, 0, this.w, this.h) } else { this.w = this.img.width; this.h = this.img.height } this.but.className += " loaded"; return true } return false }; var h = function () { f = r.offsetWidth * .5; l = r.offsetHeight * .5 }; var p = function (e) { var n = 0, r; while (r = t[n++]) { if (r.but) { r.css.msInterpolationMode = e ? "bicubic" : "nearest-neighbor"; r.css.imageRendering = e ? "optimizeQuality" : "optimizeSpeed" } } }; var d = function (e) { r = document.getElementById("screen"); i = document.getElementById("bar"); o = document.getElementById("urlInfo"); h(); var n = 0, s, u = e.length; while (s = e[n++]) { var a = 1e3 * (n % 4 - 1.5); var f = Math.round(Math.random() * 4e3) - 2e3; var l = n * (5e3 / u); t.push(new c(n - 1, s, a, f, l)); var p = t.length - 1; for (var d = 0; d < 3; d++) { var a = Math.round(Math.random() * 4e3) - 2e3; var f = Math.round(Math.random() * 4e3) - 2e3; t.push(new c(p, null, a, f, l + 100)) } } v() }; var v = function () { if (a.tx) { if (!a.s) a.setTarget(a.x, a.tx); var e = a.tween("x"); if (!e) a.tx = 0 } else if (a.ty) { if (!a.s) a.setTarget(a.y, a.ty); var e = a.tween("y"); if (!e) a.ty = 0 } else if (a.tz) { if (!a.s) a.setTarget(a.z, a.tz); var e = a.tween("z"); if (!e) { a.tz = 0; p(true); if (s.url) { s.img.style.cursor = "pointer"; s.urlActive = true; s.img.className = "href"; o.diapo = s; o.onclick = s.img.onclick; o.innerHTML = s.title || s.url; o.style.visibility = "visible"; o.style.color = s.color || "#fff"; o.style.top = Math.round(s.img.offsetTop + s.img.offsetHeight - o.offsetHeight - 5) + "px"; o.style.left = Math.round(s.img.offsetLeft + s.img.offsetWidth - o.offsetWidth - 5) + "px" } else { s.img.style.cursor = "default" } } } var n = 0, r; while (r = t[n++]) r.anim(); setTimeout(v, 32) }; return { init: d} } ()